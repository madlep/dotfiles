# use mouse for pane selection/scrolling
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
set-option -g mouse-select-window on
set-window-option -g mode-mouse on
set -g default-terminal "screen-256color"

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind-key a send-prefix

# from https://github.com/christoomey/vim-tmux-navigator
# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# vim copy/paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# use - and | for splitting
unbind-key "\""
unbind-key %
bind-key - split-window -c "#{pane_current_path}"
bind-key _ split-window -c "#{pane_current_path}"

bind-key | split-window -h -c "#{pane_current_path}"


# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# copy + paste
set-option -g default-command "reattach-to-user-namespace -l bash"
bind-key Y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# clear pane
bind-key b send-keys -R \; clear-history

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

set -g status-interval 1
set -g status-justify centre
set -g status-left-length 20
setw -g window-status-attr dim
#
# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright
set -g display-panes-time 2000

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# start window numbers at 1
set -g base-index 1
